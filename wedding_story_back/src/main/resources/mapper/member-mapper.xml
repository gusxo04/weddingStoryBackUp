<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.co.iei.member.model.dao.MemberDao">
	<select id="checkId" resultType="int">
		select count(*) from member
		where member_Id=#{checkId}
	</select>
	<select id="checkCode" resultType="int">
		select count(*) from member
		where company_no=#{checkCode}
	</select>

	<select id="adminTotalCount" resultType="int">
		select count(*) from
		member where member_type=1
	</select>

	<select id="adminTotalCount2" resultType="int">
		select count(*) from
		member where member_type=0 or member_type=3
	</select>

	<select id="getMemberList" resultType="member">
		select * from
		(select
		rownum as rnum, m.* from
		(select
		member_no,
		member_code,
		member_id,
		member_pw,
		member_name,
		member_gender,
		member_phone,
		member_email
		from
		member where member_type=1 order by member_name)m)
		where rnum between
		#{start} and #{end}
	</select>

	<select id="getAdminList" resultType="member">
		select * from
		(select
		rownum
		as rnum, m.* from
		(select
		member_no,
		member_code,
		member_id,
		member_pw,
		member_name,
		member_gender,
		member_phone,
		member_email,
		member_type,
		enroll_date
		from
		member where member_type=0 or member_type=3 order by
		member_name)m)
		where rnum between
		#{start} and #{end}
	</select>

	<select id="selectCompanyContainList" resultType="member">
		select * from
		member where company_no=#{companyNo}
	</select>
	<select id="checkLastMemberCode" resultType="int">
		SELECT
		MAX(SUBSTR((member_code), 2, 4)) FROM member
	</select>
	<select id="checkLastCompanyNo" resultType="int">
		SELECT
		MAX(SUBSTR((company_no), 2, 4)) FROM COMPANY
	</select>
	<select id="checkPartnerCode" resultType="String">
		select member_code from
		member where member_id=#{partnerId}
	</select>
	<insert id="insertMember">
		insert into member
		values(member_seq.nextval,#{companyNo},#{memberCode},#{memberType},#{memberId},#{memberPw},#{memberName},#{memberGender},#{memberPhone},#{memberEmail},#{partnerName},to_char(sysdate,'yyyy-mm-dd'),#{partnerId},#{companyBusinessNo})
	</insert>
	<update id="updateMember">
		update member set
		partner_name=#{memberName},partner_id=#{memberId} where
		member_id=#{partnerId}
	</update>
	<select id="getPartner" resultType="member">
		SELECT * FROM member
		WHERE
		member_code = #{myCode}
		AND member_no NOT IN (#{myNo})
	</select>
	<update id="delete">
		update member set member_type=4 where
		member_no=#{memberNo}
	</update>
	<select id="searchPw" resultType="member">
		select * from member where
		member_id=#{memberId}
	</select>
	<select id="checkBusinessNo" resultType="String">
		select company_no from
		member where company_business_no=#{companyBusinessNo}
	</select>

	<select id="selectMemberConsult" resultType="member">
		select member_name,
		member_phone from member where member_no=#{memberNo}
	</select>

	<update id="updateCompanyNo">
		update member set company_no = #{companyNo} where
		member_no = #{memberNo}
	</update>

	<select id="selectLoginMember" resultType="member">
		select * from member
		where member_no=#{memberNo}
	</select>
	<update id="modifyPw">
		update member set member_pw=#{memberPw} where
		member_id=#{memberId}
	</update>
	<update id="updateMember2">
		update member set
		member_name=#{memberName},member_phone=#{memberPhone},partner_name=#{partnerName},partner_id=#{partnerId}
		where member_id=#{memberId}
	</update>
	<update id="deleteMember">
		update member set member_type=4 where
		member_id=#{memberId}
	</update>
	<select id="checkEmail" resultType="int">
		select count(*) from member
		where member_email=#{memberEmail}
	</select>

	<select id="selectCompanyNo" resultType="String">
		select company_no from
		member where member_no=#{loginNo}
	</select>

	<select id="selectInsertCompanyNo" resultType="String">
		select company_no
		from member where member_no=#{memberNo}
	</select>
	<update id="insertAdmin">
		update member set member_type=#{selectedType} where
		member_id=#{insertId}
	</update>

	<select id="consultList" resultType="consult">
		select
		consult_date,consult_time,company_no from(SELECT consult.*,
		product.company_no
		FROM consult
		JOIN product ON consult.product_no = product.product_no) where
		member_no=#{memberNo}
		UNION
		SELECT PROGRESS_DATE,SUBSTR(PROGRESS_TIME, 1, 5),company_no from(SELECT
		member_pay.*, product.company_no
		FROM member_pay
		JOIN product ON member_pay.product_no = product.product_no) where
		member_no=#{memberNo} and progress !=2
		UNION
		SELECT PROGRESS_DATE,SUBSTR(PROGRESS_TIME, 1, 5),TO_CHAR(NVL(product_no, 0))
		from member_pay where product_no is null and member_no=#{memberNo} and
		progress !=2
	</select>

	<select id="consultCompanyList" resultType="company">
		select * from company
		where company_no=#{companyNo}
	</select>
	<select id="conventionList" resultType="company">
		select convention_title
		as company_name,SUBSTR(convention_time, 1, 5) as
		start_time,SUBSTR(convention_time,9) as end_time
		from convention where #{date} BETWEEN convention_start AND convention_end
	</select>
	<select id="paymentList" resultType="memberPay">
		select progress,merchant_uid,SUBSTR(pay_date,1,8)as
		pay_date,PROGRESS_DATE,PROGRESS_TIME,pay_price,product_no,ticket_no,member_no
		from member_pay where member_no=#{memberNo}
		<if test="state == 'payment'">
			and (progress=0 or progress=1)
		</if>
		<if test="state == 'complet'">
			and progress=3
		</if>
		<if test="state == 'cancel'">
			and progress=2
		</if>
	</select>
	<select id="getYear" resultType="memberPay">
		SELECT DISTINCT
		SUBSTR(merchant_uid, 1, 4) AS merchant_uid
		FROM member_pay
	</select>
	
	<select id="selectOneMember" resultType="member">
		select member_name,member_phone from member where member_no =#{memberNo}
	</select>
	
	<insert id="insertMemberPay">
		insert into member_pay values (member_pay_seq.nextval, #{memberNo}, #{productNo},to_char(sysdate,'yyyy-mm-dd'),#{progressDate},#{payPrice}, #{progress},#{merchant_uid})
	</insert>
	
	
</mapper>
